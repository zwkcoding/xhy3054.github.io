---
layout: post
title: c与ｃ++关键字struct与class的区别
date: 2018-09-15 10:07:24.000000000 +09:00
img:  town1.jpg # Add image post (optional)
tag: [c与c++]
---

在我刚上大学那会儿，学了ｃ语言与c++。当时肯定是没学好哈哈，记得我好长一段时间都认为c++语言就是ｃ语言多了面向对象的部分（这个有可能是因为谭浩强的两本书实在太像了）。这段时间一直在总结c语言和c++语言学习，c++语言确实脱胎于c语言，但是有些地方确实还是会有细微的差别的。已经写了几篇博客了，今天这应该是最后一篇，讲的是关键字struct与关键字class。这个是收尾工作，所以内容十分平，我写的轻松，看起来也轻松。（因为内容实在是少，而且很简单）

# c语言中的关键字struct
首先需要说明一下，在ｃ语言中是没有关键字class的。只有关键字struct。

在ｃ语言中，关键字struct用来开始构建结构体类型。如下：
```c
struct{
    int a;
    char b;
    float c;
}x,y[10];
```
如上，`struct{int a;char b;float c;}`是一种结构体类型，上述代码中声明a为这种类型的变量，y为包含10个这种类型变量的数组。不过会有人发现这样声明是不是太麻烦，确实有些麻烦，所以可以为这种结构体类型设置**标签**。如下：
```c
struct A{
    int a;
    char b;
    float c;
};
struct A x,y[10];
```
如上，可以起到一样的作用，其中`A`为该结构体的标签。也有很多人喜欢下面的用法：
```c
typedef struct {
    int a;
    char b;
    float c;
} B;
B x,y[10];
```
这种用法其实是用**typedef**为这种结构体类型起了一个**别名**。但是这种类型会有一个局限，就是在结构体内部如果有指向本身的指针的话（链表什么常见的数据结构里经常用到），会不好表达，因为此时别名还未生效，此时就可以使用标签来解决，如下：
```c
typedef struct A{
    int a;
    char b;
    float c;
    struct A *next;
} B;
B x,y[10];
```

# c++中的关键字struct与class
在c++中，关键字struct与class都是用来开始**类**的定义的(注意！c++中关键字struct不再是用来开始结构体的定义，二是类的定义，与ｃ语言中不再一样)。

那struct与class又有什么区别呢？我们都知道在类中，成员是有访问属性的，分别是**public**与**private**。这两个关键字唯一的区别就是，使用struct关键字时，如果没有访问说明符，那么成员默认是**public**的；而使用class关键字时，如果没有访问说明符，那么成员默认是**private**的。
