I"\	<p>主要近来又发现本人的记忆力水平需要笔记辅助，因此写来备忘。</p>

<h1 id="目录">目录</h1>

<ul>
  <li><a href="#Softmax函数">Softmax函数</a></li>
  <li><a href="#Triplet_loss">Triplet loss</a></li>
</ul>

<h2 id="softmax函数">Softmax函数</h2>
<p>Softmax函数，也叫归一化指数函数，主要是用来辅助多分类任务。</p>

<p>应用场景： 对于一个k分类的问题，通过对一个物体的特征进行处理，得到一个k维向量v，最好的结果当然是正确分类的维度取值1，其他维度取值0. 但是一般情况下我们得到的结果是每个维度取值范围为从负无穷到正无穷。</p>

<p>Softmax的作用：将每个维度的取值限定到0到1之间，并且所有维度的值之和为1.</p>

<p>Softmax的做法：</p>
<ol>
  <li>
    <p>首先将每个维度的值转换为非负数，做法：<code class="highlighter-rouge">v[i] = exp(v[i])</code></p>
  </li>
  <li>
    <p>将非负数的值限定到0和1之间，并似的所有值和为1.做法：<code class="highlighter-rouge">v[i] = v[i]/(v[1]+v[2]+...+v[k])</code>;</p>
  </li>
</ol>

<p>总结：<code class="highlighter-rouge">v[i] = exp(v[i]) / {exp(v[1]) + exp(v[2]) + ... + exp(v[k])}</code></p>

<h2 id="triplet_loss">Triplet_loss</h2>

<blockquote>
  <p>Triplet loss最初是在FaceNet的论文中提出，可以较好地学到人脸的embedding，相似的图像在embedding空间里是相近的，可以判断是否是同一个人脸。</p>
</blockquote>

<h3 id="目的">目的</h3>

<ul>
  <li>
    <p>使具有相同标签的样本在embedding空间尽量接近。</p>
  </li>
  <li>
    <p>使具有不同标签的样本在embedding空间尽量远离。</p>
  </li>
</ul>

<p>如果只遵循以上两点，最后embedding空间中相同类别的样本间距离很小，不同类别的样本之间距离也会偏小。因此，需要加入margin。</p>

<h3 id="原理">原理</h3>

<p>输入是一个三元组<code class="highlighter-rouge">&lt;a, p, n&gt;</code>，其中</p>

<ul>
  <li>a：anchor 原点</li>
  <li>p：positive 与a同一类别的样本</li>
  <li>n：negative 与a不同类别的样本</li>
</ul>

<p>最终的loss为</p>

<script type="math/tex; mode=display">L = max(d(a,p) - d(a,n) + margin, 0)</script>

<p>最小化L，则<code class="highlighter-rouge">d(a,p)-&gt;0，d(a,n)-&gt;margin</code></p>
:ET